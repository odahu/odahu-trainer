{{- if .Values.toolchain_integration.enabled -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}-mlflow-resources"
  labels:
    {{- include "odahuflow.helm-labels" . | nindent 4 }}
data:
  resources.yaml: |
    kind: ToolchainIntegration
    id: mlflow
    spec:
      additionalEnvironments:
        MLFLOW_TRACKING_URI: http://mlflow.{{ .Release.Namespace }}.svc.cluster.local
      defaultImage: "{{ include "odahuflow.image-name" (dict "root" . "service" .Values.tracking_server "tpl" "%sodahu-flow-mlflow-toolchain:%s") }}"
      entrypoint: /opt/conda/bin/odahu-flow-mlflow-runner
    ---
    kind: ToolchainIntegration
    id: mlflow-project
    spec:
      additionalEnvironments:
        MLFLOW_TRACKING_URI: http://mlflow.{{ .Release.Namespace }}.svc.cluster.local
      defaultImage: "{{ include "odahuflow.image-name" (dict "root" . "service" .Values.tracking_server "tpl" "%sodahu-flow-mlflow-toolchain:%s") }}"
      entrypoint: /opt/conda/bin/odahu-flow-mlflow-project-runner
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-mlflow-resources-uploader"
  labels:
    component: "mlflow-resources-uploader"
    {{- include "odahuflow.helm-labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      volumes:
        - name: resources
          configMap:
            name: "{{ .Release.Name }}-mlflow-resources"
      containers:
      - name: mlflow-resources-uploader
        env:
          - name: API_URL
            value: {{ .Values.apiUrl }}
        image: "{{ include "odahuflow.image-name" (dict "root" . "service" .Values.odahuflowctl "tpl" "%sodahu-flow-cli:%s") }}"
        volumeMounts:
          - mountPath: /opt/odahu-flow
            name: resources
        command:
        - /bin/sh
        - -c
        args: ["
        {{- if .Values.security.mesh_authn -}}
          odahuflowctl login
        --client_id {{ .Values.resource_uploader_sa.client_id }}
        --client_secret {{ .Values.resource_uploader_sa.client_secret }}
        --issuer {{ .Values.oauth_oidc_issuer_url }}
        --url {{ .Values.apiUrl }}
        && {{ end -}}
        odahuflowctl bulk apply /opt/odahu-flow/resources.yaml"]
{{- end }}
